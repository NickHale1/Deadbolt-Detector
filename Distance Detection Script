#!/usr/bin/python

# Import required Python libraries
import time
import RPi.GPIO as GPIO
import requests

# Use BCM GPIO references
# instead of physical pin numbers
GPIO.setmode(GPIO.BCM)

# Define GPIO to use on Pi
TRIG = 23
ECHO = 24

locked = True

# Set pins as output and input
GPIO.setup(TRIG,GPIO.OUT)  # Trigger
GPIO.setup(ECHO,GPIO.IN)      # Echo

GPIO.setwarnings(False)

print ("Ultrasonic Measurement")

try:
	while True:

		GPIO.output(TRIG, False)
		print ("Waiting For Sensor To Settle")
		time.sleep(2)

		GPIO.output(TRIG, True)
		time.sleep(0.00001)
		GPIO.output(TRIG, False)

		while GPIO.input(ECHO)==0:
			pulse_start = time.time()

		while GPIO.input(ECHO)==1:
  			pulse_stop = time.time()

# Calculate pulse length
		pulse_duration = (pulse_stop - pulse_start)

		distance = (pulse_duration * 17150)

		distance = round(distance, 2)

# Check to see if door is unlocked. False = Unlocked.
		if(distance > 50 and locked):
			url = 'https://deadbolt-detector-default-rtdb.firebaseio.com/Detectors/12345.json'
			response = requests.put(url, json = {'status': False})
			print ("Updated Status: Unlocked")
			locked = False
		print ("Distance :",distance,"cm")

		if(distance <= 50 and locked == False):
			url = 'https://deadbolt-detector-default-rtdb.firebaseio.com/Detectors/12345.json'
			response = requests.put(url, json = {'status': True})
			print ("Updated Status: Locked")
			locked = True




except KeyboardInterrupt:
	print("Cleaning up!")

	GPIO.cleanup()
